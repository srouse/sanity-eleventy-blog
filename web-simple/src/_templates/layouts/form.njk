<scw-form
  scw-width-colvw-6
  scw-stack-initial
  scw-gap-1s
  style="max-width: 700px; margin: 0 auto;">
  <scw-text
    scw-text-05
    scw-padding-bottom-2s>
    {{ form.description }}
  </scw-text>
  {% for input in form.inputs %}
    {% include "layouts/inputs.njk" %}
  {% endfor %}
  <scw-flex-h>
    <scw-text 
      class="results-feedback"
      scw-fill>
    </scw-text>
    <scw-button 
      aria-label="submit"
      href="javascript:">
    </scw-button>
  </scw-flex-h>
</scw-form>
<script>
  document.currentScript.previousElementSibling.addEventListener(
    'scw-submit',
    (evt) => {
      console.log(evt);
      const resultsFeedback = evt.target.querySelector('.results-feedback');
      if ( '{{form.endpoint}}' === '' ) {
        alert('no endpoint set');
        return;
      }
      if (
        evt.detail &&
        evt.detail.validation &&
        evt.detail.validation.length > 0
      ) {
        return;
      }
      var formData = new FormData();
      for ( var key in evt.detail.data ) {
        formData.append(key, evt.detail.data[key]);
      }
      fetch(
        '{{form.endpoint}}', 
        {
          method: 'POST',
          body: formData,
          headers: {
              'Accept': 'application/json'
          }
        }
      ).then((response) => {
        if (response.ok) {
          resultsFeedback.innerHTML = "Thanks for your submission!";
        } else {
          response.json().then(data => {
            if (Object.hasOwn(data, 'errors')) {
              resultsFeedback.innerHTML = data["errors"].map(error => error["message"]).join(", ");
            } else {
              resultsFeedback.innerHTML = "Oops! There was a problem submitting your form";
            }
          })
        }
      }).catch(error => {
        resultsFeedback.innerHTML = "Oops! There was a problem submitting your form";
      });
    }
  );
</script>